/* Licensed under Apache-2.0 */

#ifndef CRYPTO_PAIR_FFI_H_
#define CRYPTO_PAIR_FFI_H_

/* Generated with cbindgen:0.24.3 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>
#include "crypto_market_type.h"

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

/**
 * Normalize a cryptocurrency trading symbol.
 */
const char *normalize_pair(const char *symbol, const char *exchange);

/**
 * Infer out market type from the symbol.
 *
 * The `is_spot` parameter is not needed in most cases, but at some exchanges
 *  (including binance, gate and mxc) a symbol might exist in both spot and
 * contract markets, for example:
 * * At binance `BTCUSDT` exists in both spot and linear_swap markets
 * * At gate `BTC_USDT` exists in both spot and linear_swap markets,
 * `BTC_USD` exists in both spot and inverse_swap markets
 */
MarketType get_market_type(const char *symbol,
                           const char *exchange,
                           bool is_spot);

/**
 * Deallocate a string.
 */
void deallocate_string(const char *pointer);

#ifdef __cplusplus
} // extern "C"
#endif // __cplusplus

#endif /* CRYPTO_PAIR_FFI_H_ */
